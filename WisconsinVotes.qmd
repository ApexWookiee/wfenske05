---
title: "WisconsinVotes"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r, message = FALSE, echo = FALSE}
library(tidyverse)
library(ggplot2)
library(fec12)
devtools::install_github("baumer-lab/fec12")
library(mdsr)
library(sf)
library(ggspatial)
library(prettymapr)
```

```{r, message = FALSE, echo = FALSE}
votes <- results_house

# summary of the congressional WI districts and the 2016 voting
district_elections <- results_house |>
  mutate(district = parse_number(district_id)) |>
  group_by(state, district) |>
  summarize(
    N = n(), 
    total_votes = sum(general_votes, na.rm = TRUE),
    d_votes = sum(ifelse(party == "D", general_votes, 0), na.rm = TRUE),
    r_votes = sum(ifelse(party == "R", general_votes, 0), na.rm = TRUE),
    .groups = "drop"
  ) |>
  mutate(
    other_votes = total_votes - d_votes - r_votes,
    r_prop = r_votes / total_votes,  
    winner = ifelse(r_votes > d_votes, "Republican", "Democrat")
  )
wi_results <- district_elections |>
  filter(state == "WI") %>%
  select(-state)

wi_results %>%
  summarise(
    d_total = sum(d_votes), 
    r_total = sum(r_votes), 
    total_votes_sum = sum(total_votes),
    prop_r = r_total / total_votes_sum,
    prop_d = d_total / total_votes_sum,
  )
```

```{r, echo = FALSE}
# Download congressional district shapefiles for the 113th Congress from a UCLA website (don't sweat the details too much)
src <- "http://cdmaps.polisci.ucla.edu/shp/districts113.zip"
lcl_zip <- fs::path(tempdir(), "districts113.zip")
download.file(src, destfile = lcl_zip)
lcl_districts <- fs::path(tempdir(), "districts113")
unzip(lcl_zip, exdir = lcl_districts)
dsn_districts <- fs::path(lcl_districts, "districtShapes")

# You can also downloaded zip file and uploaded it into R, but this uses a ton of space!
# dsn_districts <- fs::path("Data/districtShapes")

# read shapefiles into R as an sf object
st_layers(dsn_districts)
```

```{r, echo = FALSE}
# be able to read as a data frame as well
districts <- st_read(dsn_districts, layer = "districts113") |>
  mutate(DISTRICT = parse_number(as.character(DISTRICT)))
```

```{r, echo = FALSE, message = FALSE, results = 'hide'}
# create basic plot with WI congressional districts
wi_shp <- districts |>
  filter(STATENAME == "Wisconsin")
wi_shp |>
  st_geometry() |>
  plot(col = gray.colors(nrow(wi_shp)))
```

```{r, echo = FALSE}
# Append election results to geospatial data
wi_merged <- wi_shp |>
  st_transform(4326) |>
  inner_join(wi_results, by = c("DISTRICT" = "district"))
head(wi_merged, width = Inf)
```

```{r, echo = FALSE, message = FALSE, results = 'hide'}
# Color based on winning party
#   Note that geom_sf is part of ggplot2 package, while st_geometry is
#   part of sf package
wi <- ggplot(data = wi_merged, aes(fill = winner)) +
  annotation_map_tile(zoom = 6, type = "osm", progress = "none") + 
  geom_sf(alpha = 0.5) +
  scale_fill_manual("Winner", values = c("blue", "red")) + 
  geom_sf_label(aes(label = DISTRICT), fill = "white") + 
  theme_void()
wi
```

# Gerrymandering?

When one looks at a map, one expects that Democrats should win about half of the seats and that Republicans should win the other half. However, this is not the case. Instead, this map tells us that Republicans won 5 of 8 available districts with democrats claiming the remaining 3. Gerrymandering is hard to explicitly prove, but intuition tells us that something is off. It is for this reason that we might create these kinds of maps before moving to rigorous statistical methods to tell us if something is unexpected.
